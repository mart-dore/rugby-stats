# Remove 1st and last columns
data = data[ , -c(1,ncol(data))]
colnames(data)
# filter 2024 season
data = data %>% filter(Saison == 2024)
# essai
# penalité
# transformation
# drop
# rouge
# jaune
# titu/remplaçant
miss_var_summary(data)
# impute NAs
# in D,R, J, P, T, E -> replace by 0
data[c("D", "R", "J", "P", "T", "E")][is.na(data[c("D", "R", "J", "P", "T", "E")])] <- 0
# in FFR, Joueur Supplémentaire, Prêt --> replace by 'None'
data[c("FFR", "Joueur Supplémentaire", "Prêt")][is.na(data[c("FFR", "Joueur Supplémentaire", "Prêt")])] <- "None"
# in Taille -> replace by mean(data$Taille)
data$Taille[is.na(data$Taille)] <- mean(data$Taille, na.rm = TRUE)
data$Poids[is.na(data$Poids)] <- mean(data$Poids, na.rm = TRUE)
data$Âge[is.na(data$Âge)] <- mean(data$Âge, na.rm = TRUE)
miss_var_summary(data)
stats_joueurs = data %>%
group_by(ID, Nom, Prénom) %>%
summarise(Nation = last(Nationalité),
Age = max(Âge),
Poids = max(Poids),
Competition = last(Compétition),
Club = last(Club),
nbMatches = sum(Matchs),
totalTps = sum(Temps),
nbRed = sum(R),
nbYellow = sum(J),
nbTries = sum(E),
nbPenalties = sum(P),
nbTransfos = sum(T),
nbDrops = sum(D),
nbTitu = sum(`T/R` == 'T'),
nbRempl = sum(`T/R` == 'R'),
postes = paste(unique(Numéro), collapse = ", "))
stats_joueurs
dataClub = data %>% filter(Compétition == 'Top 14 2024')
unique(dataClub$Club)
len(unique(dataClub$Club))
length(unique(dataClub$Club))
### Numeric
```{r}
history
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
num_features
# remove id
num_features = num_features[num_features != "ID"]
num_features
library(gridExtra)
for (i in length(num_features)){
print(i)
# p = ggplot(data = stats_joueurs, aes(x=get(var))) +
#   geom_density()
#
# plots[[i]] = p
}
for (i in (1:length(num_features))){
print(i)
# p = ggplot(data = stats_joueurs, aes(x=get(var))) +
#   geom_density()
#
# plots[[i]] = p
}
num_features[2]
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_density()
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=2)
grid.arrange(grobs = plots, ncol=3)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_density()+
xlab(var)
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_density()+
geom_histogram()+
xlab(var)
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_density()+
geom_histogram()
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram()+
geom_density()
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(alpha=0)+
geom_density()
p
0
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_density(alpha=0)+
geom_histogram()
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_density(alpha=0, fill = "white")+
geom_histogram()
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(aes(y = ..density..), color="black")
geom_density(alpha=0, fill = "white")+
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(aes(y = ..density..), color="black")+
geom_density(alpha=0, fill = "white")
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white")
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "turquoise")
p
p = ggplot(data = stats_joueurs, aes(x=Poids)) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")
p
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p)
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p)
plots[i] = p
}
grid.arrange(grobs = plots, ncol=3)
grobs()
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p) # for debug
plots = append(plots, p)
}
grid.arrange(grobs = plots, ncol=3)
?grob
grob()
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p) # for debug
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
library(patchwork)
??plot_grid
?plot_grid
library(cowplot)
plot_grid(plotlist = plots)
print(p) # for debug
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p) # for debug
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
ggplot(data = stats_joueurs)
print(p) # for debug
# add plot to list
plots[[i]] = p
}
grid.arrange(grobs = plots, ncol=3)
plot_grid
?plot_grid
library(cowplot)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = c()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
ggplot(data = stats_joueurs)
# add plot to list
plots[i] = p
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = c()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# add plot to list
plots[i] = p
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# add plot to list
plots[[i]] = p
}
plot_grid(plotlist = plots)
plots[1]
plots[2]
plots[4]
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p)
# add plot to list
plots = append(plots, p)
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots = append(plots, p)
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots = list.append(plots, p)
}
?list.append
library(rlist)
install.packages('rlist')
library(rlist)
install.packages('rlist')
library(rlist)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots = list.append(plots, p)
}
plot_grid(plotlist = plots)
plots[1]
plots[3]
plots[10]
plots[[1]]
plots[[2]]
plots[[[3]]]
plots[[2]]
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p)
# add plot to list
plots = list.append(plots, p)
}
plot_grid(plotlist = plots)
length(num_features)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = NULL
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
print(p)
# add plot to list
plots = c(plots, p)
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = NULL
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots = c(plots, p)
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
plots = list()
for (i in (1:length(num_features))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots = c(plots, p)
}
plot_grid(plotlist = plots)
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
tpa = c('Taille', 'Poids', 'Age')
plots = list()
for (i in (1:length(tpa))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots[[i]] = p
}
plot_grid(plotlist = plots)
num_features
View(data)
stats_joueurs = data %>%
group_by(ID, Nom, Prénom) %>%
summarise(Nation = last(Nationalité),
Age = max(Âge),
Taille = max(Taille),
Poids = max(Poids),
Competition = last(Compétition),
Club = last(Club),
nbMatches = sum(Matchs),
totalTps = sum(Temps),
nbRed = sum(R),
nbYellow = sum(J),
nbTries = sum(E),
nbPenalties = sum(P),
nbTransfos = sum(T),
nbDrops = sum(D),
nbTitu = sum(`T/R` == 'T'),
nbRempl = sum(`T/R` == 'R'),
postes = paste(unique(Numéro), collapse = ", "))
stats_joueurs
num_features = names(stats_joueurs)[sapply(stats_joueurs, is.numeric)]
# remove id
num_features = num_features[num_features != "ID"]
tpa = c('Taille', 'Poids', 'Age')
plots = list()
for (i in (1:length(tpa))){
var = num_features[i]
p = ggplot(data = stats_joueurs, aes(x=get(var))) +
geom_histogram(aes(y = ..density..), color="black", fill = 'lightblue')+
geom_density(alpha=0, fill = "white", color = "blue")+
xlab(var)
# print(p)
# add plot to list
plots[[i]] = p
}
plot_grid(plotlist = plots)
p = ggplot(data = stats_joueurs, aes(x=Poids, fill=Competition)) +
geom_histogram(aes(y = ..density..), color="black")+
geom_density(alpha=0, fill = "white", color = "blue")
p
?geom_histogram
p = ggplot(data = stats_joueurs, aes(x=Poids, fill=Competition)) +
geom_histogram(aes(y = ..density..),position = "identity", color="black")+
geom_density(alpha=0, fill = "white", color = "blue")
p
p = ggplot(data = stats_joueurs, aes(x=Poids, fill=Competition)) +
geom_histogram(aes(y = ..density..),position = "identity", color="black", alpha =.6)+
geom_density(alpha=0, fill = "white", color = "blue")
p
shiny::runApp('COURS/R/0_Projets_Perso/STRONG SHINY/rugby-stats')
runApp('COURS/R/0_Projets_Perso/STRONG SHINY/rugby-stats')
runApp('COURS/R/0_Projets_Perso/STRONG SHINY/rugby-stats')
runApp('COURS/R/0_Projets_Perso/STRONG SHINY/rugby-stats')
setwd("~/")
setwd("~/COURS/R/0_Projets_Perso/rugby-stats")
setwd("~/COURS/R/0_Projets_Perso/STRONG SHINY/rugby-stats")
